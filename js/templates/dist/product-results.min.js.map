{"version":3,"sources":["product-results.ts"],"names":["toggleFeedFilterActive","event","preventDefaultFunction","filterContainer","currentTarget","target","closest","filters","getElementsByClassName","classList","toggle","error","console","log","toggleFeedSortActive","sortContainer","toggleFeedFilterDropdownActive","filter","filterDropdown","handleFeedLoadMore","feedParent","document","getElementById","inner","defaultFeedCount","parseInt","dataset","defaultfeedcount","style","maxHeight","offsetHeight","updateFeedActiveItems","updateFeedLoadMore","handleFeedFilterOptionClick","parent","filterOption","activeFilters","JSON","parse","activefilters","filterType_1","value","filterValue_1","filterObject","type","updateMethod","activeFilterIndex","forEach","activeFilter","key","contains","splice","remove","push","add","stringify","updateFeedActiveFilters","setFilterCountToMobileButtons","count","buttons","getElementsByTagName","a","length","innerText","handleFeedActiveFilterClick","filterOptions","i","handleFeedSortOptionClick","sortOption","feed","feedInner","sortOptions","sortOptionValue","sortFeedItems","handleFeedItemVariantChange","targetImage","image","colorVariants","setAttribute","updateType","activeFiltersContainer","filterCount","currentFilterCount","innerHTML","activeFilterInnerHtml","filterContent","countDelta","feedItems","feedCount","feedcount","activeItemsCount","j","feedItem","itemFilterCount","k","surface","sizes","indexOf","color","gender","collection","feedItems_1","loadMoreContainer","activeFeedItems","resultsContainer","resultString","showButton","loadableItems","map","vegan","featuretag","clearFeedActiveFilters","i_1","elements","Array","from","children","sortOrder_1","sort","b","aValue","bValue","bestSellerSortOrder_1","Date","date","getTime","price","element","appendChild"],"mappings":"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","file":"product-results.min.js","sourcesContent":["type FeedFilter = {\n  type: string;\n  value: string;\n};\ntype UpdateType = 'add' | 'remove';\ntype SortOption = 'featured' | 'bestseller' | 'newest' | 'priceLowToHigh' | 'priceHighToLow';\n\nconst toggleFeedFilterActive: (event: any) => void = (event) => {\n  preventDefaultFunction(event);\n\n  try {\n    const target: any = event.currentTarget || event.target;\n    const filterContainer: any = target.closest('.filterContainer');\n    const filters: any = filterContainer.getElementsByClassName('filters')[0];\n    const filterButton: any = filterContainer.getElementsByClassName('filterButton')[0];\n\n    filterButton.classList.toggle('active');\n    filters.classList.toggle('active');\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst toggleFeedSortActive: (event: any) => void = (event) => {\n  preventDefaultFunction(event);\n\n  try {\n    const target: any = event.currentTarget || event.target;\n    const filterContainer: any = target.closest('.filterContainer');\n    const sortContainer: any = filterContainer.getElementsByClassName('sortContainer')[0];\n    const sortButton: any = filterContainer.getElementsByClassName('sortButton')[0];\n\n    sortButton.classList.toggle('active');\n    sortContainer.classList.toggle('active');\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst toggleFeedFilterDropdownActive: (event: any) => void = (event) => {\n  preventDefaultFunction(event);\n\n  try {\n    const target: any = event.currentTarget || event.target;\n    const filter: any = target.closest('.filter');\n    const filterDropdown: any = filter.getElementsByClassName('filterDropdown')[0];\n\n    filter.classList.toggle('active');\n    filterDropdown.classList.toggle('active');\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst handleFeedLoadMore: (event: any) => void = (event) => {\n  preventDefaultFunction(event);\n\n  try {\n    const target: any = event.currentTarget || event.target;\n    const feedParent: any = document.getElementById('productResultsFeed');\n    const feed: any = target.closest('.feed');\n    const inner: any = feed.getElementsByClassName('inner')[0];\n    const defaultFeedCount: number = parseInt(feedParent.dataset.defaultfeedcount) || 0;\n\n    inner.style.maxHeight = `${inner.offsetHeight}px`;\n    updateFeedActiveItems(defaultFeedCount);\n    inner.style.maxHeight = '';\n    updateFeedLoadMore();\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst handleFeedFilterOptionClick: (event: any) => void = (event) => {\n  preventDefaultFunction(event);\n\n  try {\n    const parent: any = document.getElementById('productResultsFeed');\n    const target: any = event.currentTarget || event.target;\n    const filter: any = target.closest('.filter');\n    const filterOption: any = target.closest('.filterOption');\n    const activeFilters: any = JSON.parse(parent.dataset.activefilters) || [];\n    const filterType: string = filter.dataset.value || '';\n    const filterValue: string = filterOption.dataset.value || '';\n    const filterObject: FeedFilter = { type: filterType, value: filterValue };\n    var updateMethod: UpdateType = 'add';\n    var activeFilterIndex: number = -1;\n\n    activeFilters.forEach((activeFilter: any, key: number) => {\n      if (activeFilter.type === filterType && activeFilter.value === filterValue) activeFilterIndex = key;\n    });\n\n    if (filterOption.classList.contains('active')) {\n      if (activeFilterIndex > -1) activeFilters.splice(activeFilterIndex, 1);\n\n      updateMethod = 'remove';\n      filterOption.classList.remove('active');\n    } else {\n      if (activeFilterIndex === -1) activeFilters.push(filterObject);\n\n      filterOption.classList.add('active');\n    }\n\n    parent.dataset.activefilters = JSON.stringify(activeFilters);\n    updateFeedActiveFilters(updateMethod);\n    updateFeedActiveItems();\n    updateFeedLoadMore();\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst setFilterCountToMobileButtons: (count: number) => void = (count = 0) => {\n  try {\n    const parent: any = document.getElementById('productResultsFeed');\n    const filterButtonContainer: any = parent.getElementsByClassName('mobile-filter-buttons')[0];\n    const buttons: any = filterButtonContainer.getElementsByTagName('BUTTON');\n\n    for (var a = 0; a < buttons.length; a++) {\n      const countContainer: any = buttons[a].getElementsByTagName('SPAN')[0];\n      countContainer.innerText = `(${count})`;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst handleFeedActiveFilterClick: (event: any, filter: FeedFilter) => void = (event, filter) => {\n  preventDefaultFunction(event);\n\n  try {\n    const parent: any = document.getElementById('productResultsFeed');\n    const target: any = event.currentTarget || event.target;\n    const filterContainer: any = target.closest('.filterContainer');\n    const activeFilters: any = JSON.parse(parent.dataset.activefilters) || [];\n    const filters: any = filterContainer.getElementsByClassName('filters')[0];\n    const filterOptions: any = filters.getElementsByClassName('filterOption');\n    var activeFilterIndex: number = -1;\n    var updateMethod: UpdateType = 'remove';\n\n    activeFilters.forEach((activeFilter: any, key: number) => {\n      if (activeFilter.type === filter.type && activeFilter.value === filter.value) activeFilterIndex = key;\n    });\n\n    for (let i = 0; i < filterOptions.length; i++) {\n      if (filterOptions[i].dataset.value !== filter.value) continue;\n\n      if (activeFilterIndex > -1) activeFilters.splice(activeFilterIndex, 1);\n\n      filterOptions[i].classList.remove('active');\n      break;\n    }\n\n    parent.dataset.activefilters = JSON.stringify(activeFilters);\n    updateFeedActiveFilters(updateMethod);\n    updateFeedActiveItems();\n    updateFeedLoadMore();\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst handleFeedSortOptionClick: (event: any) => void = (event) => {\n  try {\n    const parent: any = document.getElementById('productResultsFeed');\n    const target: any = event.currentTarget || event.target;\n    const sortOption: any = target.closest('.sortOption');\n    const feed: any = parent.getElementsByClassName('feed')[0];\n    const sortContainer: any = parent.getElementsByClassName('sortContainer')[0];\n    const feedInner: any = feed.getElementsByClassName('inner')[0];\n    const sortOptions: any = sortContainer.getElementsByClassName('sortOption');\n    var sortOptionValue: SortOption = sortOption.dataset.value || 'newest';\n\n    if (sortOption.classList.contains('active')) sortOptionValue = 'newest';\n\n    for (let i = 0; i < sortOptions.length; i++) {\n      if (sortOptions[i] === sortOption) {\n        sortOptions[i].classList.toggle('active');\n        continue;\n      }\n\n      sortOptions[i].classList.remove('active');\n    }\n\n    sortFeedItems(feedInner, sortOptionValue);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst handleFeedItemVariantChange: (event: any) => void = (event) => {\n  try {\n    const target: any = event.currentTarget || event.target;\n    const targetImage: string = target.dataset.image || '';\n    const feedItem: any = target.closest('.item');\n    const picture: any = feedItem.getElementsByTagName('picture')[0];\n    const image: any = picture.getElementsByTagName('img')[0];\n    const colorVariantContainer: any = target.closest('.colorVariants');\n    const colorVariants: any = colorVariantContainer.getElementsByClassName('colorVariant');\n\n    for (var i = 0; i < colorVariants.length; i++) {\n      colorVariants[i].classList.remove('active');\n    }\n\n    target.classList.add('active');\n    image.setAttribute('src', targetImage);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst updateFeedActiveFilters: (updateType: UpdateType) => void = (updateType) => {\n  try {\n    const feedParent: any = document.getElementById('productResultsFeed');\n    const activeFiltersContainer: any = feedParent.getElementsByClassName('activeFilters')[0];\n    var activeFilters: any = JSON.parse(feedParent.dataset.activefilters) || [];\n    const filters: any = feedParent.getElementsByClassName('filter');\n\n    for (let i = 0; i < filters.length; i++) {\n      const filter: any = filters[i];\n      const filterCount: any = filter.getElementsByClassName('count')[0];\n      const currentFilterCount: number = parseInt(filterCount.dataset.count) || 0;\n\n      switch (updateType) {\n        case 'add': //here\n          filterCount.dataset.count = currentFilterCount + 1;\n          filterCount.innerText = currentFilterCount + 1 ? `(${currentFilterCount + 1})` : '';\n        case 'remove':\n          filterCount.dataset.count = currentFilterCount - 1 > 0 ? currentFilterCount - 1 : 0;\n          filterCount.innerText = currentFilterCount - 1 > 0 ? `(${currentFilterCount - 1})` : '';\n      }\n    }\n\n    if (activeFilters.length <= 0) {\n      activeFiltersContainer.classList.remove('active');\n      activeFiltersContainer.innerHTML = '';\n    } else {\n      var activeFilterInnerHtml: string = `<ul>`;\n\n      activeFilters.forEach((activeFilter: any) => {\n        var filterContent: string = activeFilter.type;\n\n        switch (activeFilter.type) {\n          case 'surface':\n            filterContent = activeFilter.value === 'firm' ? 'Firm ground' : 'Soft ground';\n            break;\n          case 'sizes':\n            filterContent = 'Size ' + activeFilter.value;\n            break;\n          default:\n            filterContent = activeFilter.value;\n            break;\n        }\n        activeFilterInnerHtml += `<li>\n        <button data-type=\"${activeFilter.type}\" onclick=\"handleFeedActiveFilterClick(event, {type: '${activeFilter.type}', value: '${activeFilter.value}'})\">\n          <p>${filterContent}</p>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\">\n            <path d=\"M1 9L5.00001 5.00002M5.00001 5.00002L9 1M5.00001 5.00002L1 1M5.00001 5.00002L9 9\" stroke=\"black\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n          </svg>\n        </button>\n      </li>`;\n      });\n\n      activeFilterInnerHtml += `<li class=\"clear\">\n\t\t\t\t\t<button onclick=\"clearFeedActiveFilters(event)\">\n\t\t\t\t\t\t<p>Clear all</p>\n\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\">\n\t\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t\t<circle cx=\"6\" cy=\"6\" r=\"5.75\" fill=\"white\" stroke=\"black\" stroke-width=\"0.5\" />\n\t\t\t\t\t\t\t\t<path d=\"M4 8L6.00001 6.00001M6.00001 6.00001L8 4M6.00001 6.00001L4 4M6.00001 6.00001L8 8\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</li></ul>`;\n\n      activeFiltersContainer.innerHTML = activeFilterInnerHtml;\n      activeFiltersContainer.classList.add('active');\n    }\n    setFilterCountToMobileButtons(activeFilters.length);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst updateFeedActiveItems: (countDelta?: number) => void = (countDelta = 0) => {\n  try {\n    const feedParent: any = document.getElementById('productResultsFeed');\n    const defaultFeedCount: number = parseInt(feedParent.dataset.defaultfeedcount) || 0;\n    const feed: any = feedParent.getElementsByClassName('feed')[0];\n    const feedItems: any = feed.getElementsByClassName('item');\n    var feedCount: number = parseInt(feedParent.dataset.feedcount) || countDelta;\n    var activeFilters: any = JSON.parse(feedParent.dataset.activefilters) || [];\n\n    if (countDelta === 0) feedCount = defaultFeedCount;\n\n    if (activeFilters.length <= 0) {\n      for (var i = 0; i < feedItems.length; i++) {\n        if (i <= feedCount + countDelta - 1) {\n          feedItems[i].classList.add('active');\n        } else {\n          feedItems[i].classList.remove('active');\n        }\n      }\n    } else {\n      var activeItemsCount: number = 0;\n\n      for (var j = 0; j < feedItems.length; j++) {\n        const feedItem: any = feedItems[j];\n        var itemFilterCount: number = 0;\n\n        feedItem.classList.remove('active');\n\n        for (var k = 0; k < activeFilters.length; k++) {\n          const activeFilter: any = activeFilters[k];\n\n          switch (activeFilter.type) {\n            case 'surface':\n              if (feedItem.dataset.surface === activeFilter.value) itemFilterCount++;\n              break;\n            case 'sizes':\n              if (JSON.parse(feedItem.dataset.sizes).indexOf(activeFilter.value) > -1) itemFilterCount++;\n              break;\n            case 'color':\n              if (feedItem.dataset.color === activeFilter.value) itemFilterCount++;\n              break;\n            case 'gender':\n              if (feedItem.dataset.gender === activeFilter.value) itemFilterCount++;\n              break;\n            case 'collections':\n              if (feedItem.dataset.collection === activeFilter.value) itemFilterCount++;\n              break;\n          }\n        }\n\n        if (itemFilterCount >= activeFilters.length) {\n          if (activeItemsCount < feedCount + countDelta) feedItem.classList.add('active');\n\n          activeItemsCount++;\n        }\n      }\n    }\n\n    if (feedCount + countDelta > feedItems.length) {\n      feedParent.dataset.feedcount = feedItems.length;\n    } else if (feedCount + countDelta < 0) {\n      feedParent.dataset.feedcount = defaultFeedCount;\n    } else {\n      feedParent.dataset.feedcount = feedCount + countDelta;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst updateFeedLoadMore: () => void = () => {\n  try {\n    const feedParent: any = document.getElementById('productResultsFeed');\n    const feed: any = feedParent.getElementsByClassName('feed')[0];\n    const feedItems: any = feed.getElementsByClassName('item');\n    const loadMoreContainer: any = feed.getElementsByClassName('loadMore')[0];\n    const activeFeedItems: any = feed.getElementsByClassName('item active');\n    const resultsContainer: any = feed.getElementsByClassName('results')[0];\n    const feedCount: number = parseInt(feedParent.dataset.feedcount) || 0;\n    var activeFilters: any = JSON.parse(feedParent.dataset.activefilters) || [];\n    var resultString: string = `Showing ${feedCount} of ${feedItems.length} results`;\n    var showButton: boolean = true;\n    var loadableItems: number = 0;\n\n    loadMoreContainer.classList.add('hidden');\n\n    if (activeFilters.length <= 0) {\n      resultString = `Showing ${feedCount} of ${feedItems.length} results`;\n\n      if (feedItems.length <= feedCount) {\n        resultString = `Showing all ${feedItems.length} results`;\n        showButton = false;\n      }\n    } else {\n      activeFilters.map((activeFilter: any) => {\n        for (var j = 0; j < feedItems.length; j++) {\n          switch (activeFilter.type) {\n            case 'surface':\n              if (feedItems[j].dataset.surface === activeFilter.value) loadableItems++;\n              break;\n            case 'sizes':\n              if (JSON.parse(feedItems[j].dataset.sizes).indexOf(activeFilter.value) > -1) loadableItems++;\n              break;\n            case 'color':\n              if (feedItems[j].dataset.color === activeFilter.value) loadableItems++;\n              break;\n            case 'gender':\n              if (feedItems[j].dataset.gender === activeFilter.value) loadableItems++;\n              break;\n            case 'collections':\n              if ((parseInt(feedItems[j].dataset.vegan) && activeFilter.value === 'vegan') || feedItems[j].dataset.featuretag === activeFilter.value)\n                loadableItems++;\n              break;\n          }\n        }\n      });\n\n      if (activeFeedItems.length === 0) {\n        resultString = `No results found`;\n        showButton = false;\n      } else if (loadableItems <= activeFeedItems.length || loadableItems <= feedCount || activeFeedItems.length < feedCount) {\n        resultString = `Showing all results`;\n        showButton = false;\n      } else {\n        resultString = `Showing ${activeFeedItems.length} of ${loadableItems} results`;\n      }\n    }\n\n    if (showButton) loadMoreContainer.classList.remove('hidden');\n\n    resultsContainer.innerText = resultString;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst clearFeedActiveFilters: (event: any) => void = (event) => {\n  preventDefaultFunction(event);\n\n  try {\n    const feedParent: any = document.getElementById('productResultsFeed');\n    const filters: any = feedParent.getElementsByClassName('filter');\n    const filterOptions: any = feedParent.getElementsByClassName('filterOption');\n    const activeFiltersContainer: any = feedParent.getElementsByClassName('activeFilters')[0];\n\n    for (var i = 0; i < filterOptions.length; i++) {\n      filterOptions[i].classList.remove('active');\n    }\n\n    for (let i = 0; i < filters.length; i++) {\n      const filterCount: any = filters[i].getElementsByClassName('count')[0];\n\n      filterCount.dataset.count = 0;\n      filterCount.innerText = '';\n    }\n\n    activeFiltersContainer.classList.remove('active');\n    activeFiltersContainer.innerHTML = '';\n    feedParent.dataset.activefilters = '[]';\n    updateFeedActiveItems();\n    updateFeedLoadMore();\n    setFilterCountToMobileButtons(0);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst sortFeedItems: (parent: any, sortOption: SortOption) => void = (parent, sortOption) => {\n  try {\n    const elements: any = Array.from(parent.children);\n\n    switch (sortOption) {\n      case 'featured':\n        const sortOrder = ['new', 'bestseller', 'none'];\n\n        elements.sort((a: any, b: any) => {\n          const aValue = a.dataset.featuretag;\n          const bValue = b.dataset.featuretag;\n\n          if (sortOrder.indexOf(aValue) === -1) return -2;\n\n          if (sortOrder.indexOf(aValue) === sortOrder.indexOf(bValue)) return 0;\n\n          if (sortOrder.indexOf(aValue) < sortOrder.indexOf(bValue)) return -1;\n\n          if (sortOrder.indexOf(aValue) > sortOrder.indexOf(bValue)) return 1;\n\n          return -2;\n        });\n        break;\n      case 'bestseller':\n        const bestSellerSortOrder = ['bestseller', 'new', 'none'];\n\n        elements.sort((a: any, b: any) => {\n          const aValue = a.dataset.featuretag;\n          const bValue = b.dataset.featuretag;\n\n          if (bestSellerSortOrder.indexOf(aValue) === -1) return -2;\n\n          if (bestSellerSortOrder.indexOf(aValue) === bestSellerSortOrder.indexOf(bValue)) return 0;\n\n          if (bestSellerSortOrder.indexOf(aValue) > bestSellerSortOrder.indexOf(bValue)) return 1;\n\n          return -1;\n        });\n        break;\n      case 'newest':\n        elements.sort((a: any, b: any) => {\n          const aValue = new Date(a.dataset.date).getTime();\n          const bValue = new Date(b.dataset.date).getTime();\n\n          if (aValue < bValue) return 1;\n\n          if (aValue > bValue) return -1;\n\n          return 0;\n        });\n        break;\n      case 'priceLowToHigh':\n        elements.sort((a: any, b: any) => {\n          const aValue = parseInt(a.dataset.price);\n          const bValue = parseInt(b.dataset.price);\n          return aValue - bValue;\n        });\n        break;\n      case 'priceHighToLow':\n        elements.sort((a: any, b: any) => {\n          const aValue = parseInt(a.dataset.price);\n          const bValue = parseInt(b.dataset.price);\n          return bValue - aValue;\n        });\n        break;\n    }\n\n    elements.forEach((element: any) => {\n      parent.appendChild(element);\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n"]}